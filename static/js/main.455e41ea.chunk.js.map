{"version":3,"sources":["GlobalStyled.tsx","assets/BirdSongs.mp3","assets/Night.mp3","view/main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Box","styledComponents","div","props","width","justifyContent","flexDirection","Button","styled","ButtonMui","margin","padding","muiTheme","createTheme","traksData","id","label","trak","BirdSongs","Night","Main","useState","srcTraks","setSrcTraks","play","setPlay","prevId","setPrevId","ButtonGroup","variant","map","onClick","length","ThemeProvider","theme","arr","autoplay","src","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAKMA,EAAMC,IAAiBC,IAApB,8GAEE,SAAAC,GAAK,OAAIA,EAAMC,SACL,SAAAD,GAAK,OAAIA,EAAME,kBAChB,SAAAF,GAAK,OAAIA,EAAMG,iBAE7BC,EAASC,YAAOC,IAAPD,CAAkB,CAC/BE,OAAQ,MACRC,QAAS,Q,6CCbI,MAA0B,sCCA1B,MAA0B,kC,OCQnCC,EAAWC,cACXC,EAAY,CACd,CAAEC,GAAI,EAAGC,MAAO,WAAYC,KAAM,CAACC,EAAWC,IAC9C,CAAEJ,GAAI,EAAGC,MAAO,cAAeC,KAAM,CAACC,IACtC,CAAEH,GAAI,EAAGC,MAAO,cAAeC,KAAM,CAACE,KAqC3BC,EAnCF,WACT,MAAgCC,mBAAwB,IAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BJ,mBAAiB,GAA7C,mBAAOK,EAAP,KAAeC,EAAf,KAEA,OACI,qCACI,cAAC3B,EAAD,CAAKK,eAAe,SAApB,SAA6B,oDAC7B,cAACL,EAAD,CAAKK,eAAe,SAApB,SACI,cAACuB,EAAA,EAAD,CAAaC,QAAQ,YAAY,aAAW,gCAA5C,SACKf,EAAUgB,KAAI,SAAAb,GAAI,OAAI,cAAC,EAAD,CAEnBc,QAAS,WACLR,EAAiC,IAAnBD,EAASU,QAAef,EAAKA,OAAUS,IAAWT,EAAKF,GAAKE,EAAKA,KAAO,KACtFU,EAAUV,EAAKF,IACfU,GAAQ,IALO,SAMfR,EAAKD,OALJC,EAAKF,WAQtB,cAACf,EAAD,CAAKK,eAAe,SAApB,SACI,cAACL,EAAD,CAAKI,MAAM,OAAOE,cAAc,SAAhC,SACI,cAAC2B,EAAA,EAAD,CAAeC,MAAOtB,EAAtB,SACKU,EAASQ,KAAI,SAAAK,GAAG,OACb,cAAC,IAAD,CAEIC,SAAUZ,EACVa,IAAKF,GAFAA,gBC3BtBG,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCQSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.455e41ea.chunk.js","sourcesContent":["import styledComponents from \"styled-components\";\r\nimport { styled } from '@mui/material/styles';\r\nimport {BoxInterface} from \"./interfaces/globalStyled\";\r\nimport ButtonMui from '@mui/material/Button';\r\n\r\nconst Box = styledComponents.div<BoxInterface>`\r\n  display: flex;\r\n  width: ${props => props.width};\r\n  justify-content: ${props => props.justifyContent};\r\n  flex-direction: ${props => props.flexDirection};\r\n`\r\nconst Button = styled(ButtonMui)({\r\n  margin: '6px',\r\n  padding: '6px'\r\n})\r\nexport { Box, Button }","export default __webpack_public_path__ + \"static/media/BirdSongs.933b113c.mp3\";","export default __webpack_public_path__ + \"static/media/Night.d8bceefe.mp3\";","import { useState } from \"react\";\r\nimport { Box, Button } from \"../../GlobalStyled\";\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core';\r\nimport AudioPlayer from 'material-ui-audio-player';\r\nimport BirdSongs from \"../../assets/BirdSongs.mp3\";\r\nimport Night from \"../../assets/Night.mp3\";\r\n\r\nconst muiTheme = createTheme();\r\nconst traksData = [\r\n    { id: 1, label: 'Together', trak: [BirdSongs, Night] },\r\n    { id: 2, label: 'Birds Songs', trak: [BirdSongs] },\r\n    { id: 3, label: 'Night Songs', trak: [Night] }\r\n]\r\nconst Main = () => {\r\n    const [srcTraks, setSrcTraks] = useState<Array<string>>([]);\r\n    const [play, setPlay] = useState(false);\r\n    const [prevId, setPrevId] = useState<number>(0);\r\n  \r\n    return (\r\n        <>\r\n            <Box justifyContent=\"center\"><h3>Songs Traks Demo</h3></Box>\r\n            <Box justifyContent=\"center\">\r\n                <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\r\n                    {traksData.map(trak => <Button\r\n                        key={trak.id}\r\n                        onClick={() => {\r\n                            setSrcTraks( (srcTraks.length ===0 && trak.trak) || (prevId !== trak.id ? trak.trak : []));\r\n                            setPrevId(trak.id);\r\n                            setPlay(true)\r\n                        }}>{trak.label}</Button>)}\r\n                </ButtonGroup>\r\n            </Box>\r\n            <Box justifyContent=\"center\">\r\n                <Box width=\"100%\" flexDirection=\"column\">\r\n                    <ThemeProvider theme={muiTheme}>\r\n                        {srcTraks.map(arr =>\r\n                            <AudioPlayer\r\n                                key={arr}\r\n                                autoplay={play}\r\n                                src={arr}\r\n                            />\r\n                        )}\r\n                    </ThemeProvider>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\nexport default Main","import './App.css';\nimport Main from './view/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}